syntax = "proto3";

option go_package = "event";

option (gogoproto.testgen_all)  = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/elojah/game_01/pkg/geometry/position.proto";

message Move {
	bytes Source               = 1 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	bytes Target               = 2 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	Position Position          = 3 [(gogoproto.nullable)   = false];
}

message Cast {
	bytes AbilityID            = 1 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	bytes Source               = 2 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	repeated bytes Targets     = 3 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	Position Position          = 4 [(gogoproto.nullable)   = false];
}

message Feedback {
	bytes ID                   = 1 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	bytes Source               = 2 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	bytes Target               = 3 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
}

message Casted {
	bytes AbilityID            = 1 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	bytes Source               = 2 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	repeated bytes Targets     = 3 [(gogoproto.customtype) = "github.com/elojah/game_01/pkg/ulid.ID", (gogoproto.nullable) = false];
	Position Position          = 4 [(gogoproto.nullable)   = false];
}

message Action {
	option (gogoproto.onlyone) = true;
	Move Move                  = 1;
	Cast Cast                  = 2;
	Feedback Feedback          = 3;
	Casted Casted              = 4;
}
